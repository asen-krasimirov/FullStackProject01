{"ast":null,"code":"var _jsxFileName = \"D:\\\\crypto_project\\\\frontend\\\\src\\\\pages\\\\LivePricesPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMarketPrices, getSupportedPairs } from '../api/marketApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LivePricesPage = () => {\n  _s();\n  const [prices, setPrices] = useState({});\n  const [supportedCurrencies, setSupportedCurrencies] = useState([]);\n  useEffect(() => {\n    const fetchSupported = async () => {\n      try {\n        const res = await getSupportedPairs();\n        // Extract base currencies from pairs like \"BTC/USD\"\n        const currencies = res.data.map(pair => pair.split('/')[0]);\n        setSupportedCurrencies(currencies);\n      } catch (err) {\n        console.error('Failed to fetch supported pairs', err);\n      }\n    };\n    const fetchPrices = async () => {\n      try {\n        const res = await getMarketPrices();\n        setPrices(res.data);\n      } catch (err) {\n        console.error('Failed to fetch prices', err);\n      }\n    };\n    fetchSupported();\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prices-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prices-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"prices-title\",\n        children: \"\\uD83D\\uDCC8 Live Cryptocurrency Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-grid\",\n        children: Object.entries(prices).filter(([currency]) => supportedCurrencies.includes(currency)).map(([currency, price]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", price.toFixed(5)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, currency, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePricesPage, \"1efYKxiNmV8Ya3ycpsmuNcfCzSI=\");\n_c = LivePricesPage;\nexport default LivePricesPage;\nvar _c;\n$RefreshReg$(_c, \"LivePricesPage\");","map":{"version":3,"names":["useEffect","useState","getMarketPrices","getSupportedPairs","jsxDEV","_jsxDEV","LivePricesPage","_s","prices","setPrices","supportedCurrencies","setSupportedCurrencies","fetchSupported","res","currencies","data","map","pair","split","err","console","error","fetchPrices","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","filter","currency","includes","price","toFixed","_c","$RefreshReg$"],"sources":["D:/crypto_project/frontend/src/pages/LivePricesPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMarketPrices, getSupportedPairs } from '../api/marketApi';\r\n\r\nconst LivePricesPage = () => {\r\n  const [prices, setPrices] = useState({});\r\n  const [supportedCurrencies, setSupportedCurrencies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSupported = async () => {\r\n      try {\r\n        const res = await getSupportedPairs();\r\n        // Extract base currencies from pairs like \"BTC/USD\"\r\n        const currencies = res.data.map(pair => pair.split('/')[0]);\r\n        setSupportedCurrencies(currencies);\r\n      } catch (err) {\r\n        console.error('Failed to fetch supported pairs', err);\r\n      }\r\n    };\r\n\r\n    const fetchPrices = async () => {\r\n      try {\r\n        const res = await getMarketPrices();\r\n        setPrices(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch prices', err);\r\n      }\r\n    };\r\n\r\n    fetchSupported();\r\n    fetchPrices();\r\n    const interval = setInterval(fetchPrices, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"prices-container\">\r\n      <div className=\"prices-content\">\r\n        <h1 className=\"prices-title\">ðŸ“ˆ Live Cryptocurrency Prices</h1>\r\n        <div className=\"price-grid\">\r\n          {Object.entries(prices)\r\n            .filter(([currency]) => supportedCurrencies.includes(currency))\r\n            .map(([currency, price]) => (\r\n              <div key={currency} className=\"price-card\">\r\n                <h2>{currency}</h2>\r\n                <p>${price.toFixed(5)}</p>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePricesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}