{"ast":null,"code":"var _jsxFileName = \"D:\\\\crypto_project\\\\frontend\\\\src\\\\pages\\\\LivePricesPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMarketPrices } from '../api/marketApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LivePricesPage = () => {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    const fetchPrices = () => {\n      getMarketPrices().then(res => setPrices(res.data));\n    };\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 1000); // update every 5 seconds\n\n    return () => clearInterval(interval); // cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prices-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prices-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"prices-title\",\n        children: \"\\uD83D\\uDCC8 Live Cryptocurrency Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-grid\",\n        children: Object.entries(prices).map(([currency, price]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, currency, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePricesPage, \"AyDZng7+aEBipOGwqaguTBzobZI=\");\n_c = LivePricesPage;\nexport default LivePricesPage;\nvar _c;\n$RefreshReg$(_c, \"LivePricesPage\");","map":{"version":3,"names":["useEffect","useState","getMarketPrices","jsxDEV","_jsxDEV","LivePricesPage","_s","prices","setPrices","fetchPrices","then","res","data","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","currency","price","toFixed","_c","$RefreshReg$"],"sources":["D:/crypto_project/frontend/src/pages/LivePricesPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMarketPrices } from '../api/marketApi';\r\n\r\nconst LivePricesPage = () => {\r\n  const [prices, setPrices] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchPrices = () => {\r\n      getMarketPrices().then(res => setPrices(res.data));\r\n    };\r\n\r\n    fetchPrices();\r\n    const interval = setInterval(fetchPrices, 1000); // update every 5 seconds\r\n\r\n    return () => clearInterval(interval); // cleanup on unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"prices-container\">\r\n      <div className=\"prices-content\">\r\n        <h1 className=\"prices-title\">ðŸ“ˆ Live Cryptocurrency Prices</h1>\r\n        <div className=\"price-grid\">\r\n          {Object.entries(prices).map(([currency, price]) => (\r\n            <div key={currency} className=\"price-card\">\r\n              <h2>{currency}</h2>\r\n              <p>${price.toFixed(2)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePricesPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGA,CAAA,KAAM;MACxBP,eAAe,CAAC,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAIH,SAAS,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;IACpD,CAAC;IAEDH,WAAW,CAAC,CAAC;IACb,MAAMI,QAAQ,GAAGC,WAAW,CAACL,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEjD,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bb,OAAA;QAAIY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DjB,OAAA;QAAKY,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBK,MAAM,CAACC,OAAO,CAAChB,MAAM,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,KAAK,CAAC,kBAC5CtB,OAAA;UAAoBY,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACxCb,OAAA;YAAAa,QAAA,EAAKQ;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBjB,OAAA;YAAAa,QAAA,GAAG,GAAC,EAACS,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFlBI,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BID,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}